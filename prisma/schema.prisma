// ===========================================================
// PRISMA SCHEMA OTIMIZADO
// ===========================================================
// üëâ Inclui √≠ndices compostos, boas pr√°ticas e compatibilidade
//    com PostgreSQL e produ√ß√£o (Vercel, Render, etc).
// ===========================================================

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  connection_limit  = 10 // controla conex√µes simult√¢neas
}

// ===========================================================
// üîê Modelo de Usu√°rio (autentica√ß√£o do painel admin)
// ===========================================================
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ===========================================================
// üè¢ Informa√ß√µes da Empresa
// ===========================================================
model CompanyInfo {
  id          String   @id @default(cuid())
  cnpj        String   @unique
  name        String
  address     String
  city        String
  state       String
  foundedYear Int
  phone       String?
  email       String?
  description String?  @db.Text
  mission     String?  @db.Text
  vision      String?  @db.Text
  values      String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// ===========================================================
// üß© Se√ß√µes customiz√°veis da landing page
// ===========================================================
model Section {
  id        String   @id @default(cuid())
  title     String
  subtitle  String?
  content   String?  @db.Text
  imageUrl  String?
  order     Int      @default(0)
  isActive  Boolean  @default(true)
  type      String   // hero, about, services, contact, custom
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([isActive, order])
}

// ===========================================================
// üíº Servi√ßos oferecidos
// ===========================================================
model Service {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  icon        String?
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([isActive, order])
}

// ===========================================================
// üéûÔ∏è √Ålbuns de projetos / portf√≥lio
// ===========================================================
model Album {
  id          String    @id @default(cuid())
  title       String
  description String?   @db.Text
  coverImage  String?
  client      String?
  location    String?
  year        Int?
  category    String?
  order       Int       @default(0)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  photos      Photo[]

  @@index([isActive, order])
  @@index([category])
}

// ===========================================================
// üñºÔ∏è Fotos dentro dos √°lbuns
// ===========================================================
model Photo {
  id          String   @id @default(cuid())
  albumId     String
  album       Album    @relation(fields: [albumId], references: [id], onDelete: Cascade)
  imageUrl    String
  title       String?
  description String?  @db.Text
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([albumId, order])
}

// ===========================================================
// üí¨ Depoimentos de clientes
// ===========================================================
model Testimonial {
  id         String   @id @default(cuid())
  clientName String
  company    String?
  content    String   @db.Text
  rating     Int?     @default(5)
  imageUrl   String?
  order      Int      @default(0)
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([isActive, order])
}

// ===========================================================
// üë• Membros da equipe
// ===========================================================
model TeamMember {
  id        String   @id @default(cuid())
  name      String
  role      String
  bio       String?  @db.Text
  imageUrl  String?
  email     String?
  phone     String?
  linkedIn  String?
  order     Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([isActive, order])
}

// ===========================================================
// üì© Contatos e leads recebidos via site
// ===========================================================
model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  subject   String?
  message   String   @db.Text
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([isRead])
  @@index([createdAt])
}
